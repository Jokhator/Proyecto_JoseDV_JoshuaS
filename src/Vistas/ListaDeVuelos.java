/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Listas.ListaVuelo;
import java.util.HashSet;
import SampleClasses.Vuelo;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jdvc, jgsm
 */
public class ListaDeVuelos extends javax.swing.JFrame {

    /**
     * Creates new form ListaDeVuelos
     */
    ListaVuelo listaVuelos = ListaVuelo.getInstancia();
    DefaultTableModel modeloTabla;
    ArrayList<String> precios = new ArrayList<>();

    public ListaDeVuelos() {
        initComponents();
        llenarComboBoxFechas(cmb_fechaMin);
        llenarComboBoxFechas(cmb_fechaMax);
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                confirmarCierreVentana();
            }
        });
    }

    private void confirmarCierreVentana() {
        // Aquí puedes mostrar un mensaje de confirmación y realizar acciones adicionales antes de cerrar la ventana
        int opcion = javax.swing.JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas cerrar la ventana?", "Confirmar cierre", javax.swing.JOptionPane.YES_NO_OPTION);
        if (opcion == javax.swing.JOptionPane.YES_OPTION) {
            eliminarDuplicados(precios);
            dispose(); // Cerrar la ventana
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_vuelos = new javax.swing.JTable();
        btn_vuelosDisponibles = new javax.swing.JButton();
        btn_barato = new javax.swing.JButton();
        btn_promedio = new javax.swing.JButton();
        btn_caro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmb_fechaMin = new javax.swing.JComboBox<>();
        cmb_fechaMax = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 200, 221));

        tbl_vuelos.setBackground(new java.awt.Color(205, 180, 219));
        tbl_vuelos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_vuelos.setEnabled(false);
        jScrollPane1.setViewportView(tbl_vuelos);

        btn_vuelosDisponibles.setBackground(new java.awt.Color(189, 224, 254));
        btn_vuelosDisponibles.setText("Ver Vuelos");
        btn_vuelosDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_vuelosDisponiblesActionPerformed(evt);
            }
        });

        btn_barato.setBackground(new java.awt.Color(189, 224, 254));
        btn_barato.setText("Barato");
        btn_barato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_baratoActionPerformed(evt);
            }
        });

        btn_promedio.setBackground(new java.awt.Color(189, 224, 254));
        btn_promedio.setText("Promedio");
        btn_promedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_promedioActionPerformed(evt);
            }
        });

        btn_caro.setBackground(new java.awt.Color(189, 224, 254));
        btn_caro.setText("Costoso");
        btn_caro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_caroActionPerformed(evt);
            }
        });

        jLabel1.setText("Fecha Desde");

        jLabel2.setText("Fecha Hasta");

        cmb_fechaMin.setBackground(new java.awt.Color(205, 180, 219));
        cmb_fechaMin.setForeground(new java.awt.Color(205, 180, 219));
        cmb_fechaMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_fechaMinActionPerformed(evt);
            }
        });

        cmb_fechaMax.setBackground(new java.awt.Color(205, 180, 219));
        cmb_fechaMax.setForeground(new java.awt.Color(205, 180, 219));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_caro, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_promedio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_barato, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_vuelosDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_fechaMax, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_fechaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_vuelosDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_promedio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(btn_barato, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_caro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmb_fechaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_fechaMax, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private static void llenarComboBoxFechas(JComboBox<String> comboBox) {
        // Obtener la fecha actual
        Calendar fechaActual = Calendar.getInstance();

        // Crear un formato de fecha para mostrar solo mes y año
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/yyyy");

        // Obtener la fecha actual en el formato deseado
        String fecha = dateFormat.format(fechaActual.getTime());

        // Agregar la fecha actual al ComboBox
        comboBox.addItem(fecha);

        // Agregar las fechas para los próximos 2 años
        for (int i = 0; i < 24; i++) {
            // Avanzar al siguiente mes
            fechaActual.add(Calendar.MONTH, 1);

            // Obtener la fecha en el formato deseado
            fecha = dateFormat.format(fechaActual.getTime());

            // Agregar la fecha al ComboBox
            comboBox.addItem(fecha);
        }
    }

    private void eliminarDuplicados(ArrayList<String> lista) {
        HashSet<String> conjunto = new HashSet<>(lista);
        lista.clear();
        lista.addAll(conjunto);
        write("PreciosDeVuelos.txt", lista);
    }

    public double promedio() {
        double total = 0;
        for (int i = 0; i < listaVuelos.getListaVuelos().size(); i++) {
            Vuelo get = listaVuelos.getListaVuelos().get(i);
            total += get.getCostoTotalAerolinea();
        }
        total = total / listaVuelos.getListaVuelos().size();
        precios.add("Promedio de costos: " + total);
        return total;
    }

    public void write(String txt, ArrayList<String> guardar) {
        String nombreArchivo = txt;

        try (PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(nombreArchivo, false)))) {
            for (String s : guardar) {
                out.println(s);
            }
            System.out.println("Los clientes se han guardado correctamente en el archivo " + nombreArchivo);
        } catch (IOException e) {
            System.err.println("Error al guardar los clientes en el archivo " + nombreArchivo + ": " + e.getMessage());
        }
    }

    private void btn_vuelosDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_vuelosDisponiblesActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        ArrayList<String> vuelos = new ArrayList<>();
        modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("IdVuelo");
        modeloTabla.addColumn("Nombre Piloto");
        modeloTabla.addColumn("Origen");
        modeloTabla.addColumn("Destino");
        modeloTabla.addColumn("Aeropueto Origen");
        modeloTabla.addColumn("Aeropuerto Destino");
        // Limpiar los datos existentes en la tabla
        modeloTabla.setRowCount(0);

        // Llenar la tabla con los datos de la lista de vuelos
        for (Vuelo vuelo : listaVuelos.getListaVuelos()) {
            try {

                String fechamin = "01/" + String.valueOf(cmb_fechaMin.getSelectedItem());
                String fechamax = "01/" + String.valueOf(cmb_fechaMax.getSelectedItem());
                Date fechaInicial = dateFormat.parse(fechamin);
                Date fechaFinal = dateFormat.parse(fechamax);
                Date fechaVuelo = dateFormat.parse(vuelo.getFechaSalida());
                if (fechaVuelo.after(fechaInicial) && fechaVuelo.before(fechaFinal)) {
                    Object[] fila = new Object[6]; // Crea un arreglo para almacenar los datos de cada cliente
                    fila[0] = vuelo.getIdVuelo();
                    fila[1] = vuelo.getPiloto().getNom();
                    fila[2] = vuelo.getOrigen();
                    fila[3] = vuelo.getDestino();
                    fila[4] = vuelo.getCodAreopuertoSalida();
                    fila[5] = vuelo.getCodAeropuertoEntrada();
                    modeloTabla.addRow(fila);
                    vuelos.add(fila[0] + ", " + fila[1] + ", " + fila[2] + ", " + fila[3] + ", " + fila[4] + ", " + fila[5]);
                }
                tbl_vuelos.setModel(modeloTabla);
                modeloTabla.fireTableDataChanged();
            } catch (ParseException e) {
                System.out.println("Error al analizar las fechas.");
            }
        }
        write("VuelosSolicitados.txt", vuelos);
    }//GEN-LAST:event_btn_vuelosDisponiblesActionPerformed

    private void cmb_fechaMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_fechaMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_fechaMinActionPerformed

    private void btn_promedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_promedioActionPerformed
        // TODO add your handling code here:
        double prom = promedio();
        JOptionPane.showMessageDialog(this, "El promedio de costos de vuelos es: " + prom);

    }//GEN-LAST:event_btn_promedioActionPerformed

    private void btn_baratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_baratoActionPerformed
        // TODO add your handling code here:
        if (!listaVuelos.getListaVuelos().isEmpty()) {
            Vuelo barato = listaVuelos.getListaVuelos().get(0);
            for (Vuelo vuelo : listaVuelos.getListaVuelos()) {
                if (vuelo.getCostoTotalAerolinea() < barato.getCostoTotalAerolinea()) {
                    barato = vuelo;
                }
            }
            precios.add("Vuelo de menor precio: " + barato.toString());
            JOptionPane.showMessageDialog(this, "El vuelo de menor precio cuesta: " + barato.getCostoTotalAerolinea() + "\n ID vuelo: " + barato.getIdVuelo() + ", fecha salida: " + barato.getFechaSalida() + ", costo total: " + barato.getCostoTotalAerolinea());
        }
    }//GEN-LAST:event_btn_baratoActionPerformed

    private void btn_caroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_caroActionPerformed
        // TODO add your handling code here:
        if (!listaVuelos.getListaVuelos().isEmpty()) {
            Vuelo caro = listaVuelos.getListaVuelos().get(0);
            for (Vuelo vuelo : listaVuelos.getListaVuelos()) {
                if (vuelo.getCostoTotalAerolinea() > caro.getCostoTotalAerolinea()) {
                    caro = vuelo;
                }
            }
            precios.add("Vuelo de mayor precio: " + caro.toString());
            JOptionPane.showMessageDialog(this, "El vuelo de mayor precio cuesta: " + caro.getCostoTotalAerolinea() + "\n ID vuelo: " + caro.getIdVuelo() + ", fecha salida: " + caro.getFechaSalida() + ", costo total: " + caro.getCostoTotalAerolinea());
        }
    }//GEN-LAST:event_btn_caroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaDeVuelos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaDeVuelos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaDeVuelos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaDeVuelos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaDeVuelos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_barato;
    private javax.swing.JButton btn_caro;
    private javax.swing.JButton btn_promedio;
    private javax.swing.JButton btn_vuelosDisponibles;
    private javax.swing.JComboBox<String> cmb_fechaMax;
    private javax.swing.JComboBox<String> cmb_fechaMin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_vuelos;
    // End of variables declaration//GEN-END:variables
}
